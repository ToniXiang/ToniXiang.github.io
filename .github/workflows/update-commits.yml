name: Update Commits Data

on:
  push:
    branches: [ main ]
    # 排除更新 commits.json 的提交，避免無限循環
    paths-ignore:
      - 'assets/js/commits.json'
      - 'assets/js/languages.json'
  workflow_dispatch:
    inputs:
      show_all_commits:
        description: 'Show all commits (including automation commits)'
        required: false
        default: 'false'
        type: choice
        options:
        - 'true'
        - 'false'
      max_commits:
        description: 'Maximum number of commits to include (0 for unlimited)'
        required: false
        default: '0'

jobs:
  update-commits:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Install jq
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
    
    - name: Wait for other automation workflows to complete
      if: github.event_name == 'push'
      run: |
        echo "Waiting for other automation workflows to complete..."
        sleep 30
        
        # Check for any running workflows that might update files
        max_attempts=10
        attempt=1
        
        while [ $attempt -le $max_attempts ]; do
          echo "Checking for running workflows (attempt $attempt/$max_attempts)..."
          
          # Get current running workflows
          running_workflows=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?status=in_progress" | \
            jq -r '.workflow_runs[] | select(.name != "Update Commits Data") | .id')
          
          if [ -z "$running_workflows" ]; then
            echo "No other automation workflows running. Proceeding..."
            break
          else
            echo "Found running workflows: $running_workflows"
            echo "Waiting 30 seconds before next check..."
            sleep 30
            attempt=$((attempt + 1))
          fi
        done
        
        if [ $attempt -gt $max_attempts ]; then
          echo "Warning: Max attempts reached. Proceeding anyway..."
        fi
    
    - name: Generate commits data
      run: |
        max_commits="${{ github.event.inputs.max_commits || '0' }}"
        if [ "$max_commits" = "0" ]; then
          max_commits="10000"  # Set to a very large number for unlimited
        fi
        
        if [ "${{ github.event.inputs.show_all_commits }}" = "true" ]; then
          pwsh -File scripts/generate-commits.ps1 -MaxCommits $max_commits -ShowAll
        else
          pwsh -File scripts/generate-commits.ps1 -MaxCommits $max_commits
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain assets/js/commits.json)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add assets/js/commits.json
        git commit -m "chore(ci): update commits.json [skip ci]"
        git push